@model FoodDelivery.ViewModel.OrderConfirmationViewModel
@using Newtonsoft.Json

@{
    var orderJson = JsonConvert.SerializeObject(Model.Order);
    ViewData["Title"] = "Order Confirmation";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Cart/OrderConfirmation.css" asp-append-version="true" />
}

<h2>Order Confirmation</h2>

<div class="container mt-5">
    <h3>Order Details</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Item</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Order?.OrderItems != null)
            {
                @foreach (var item in Model.Order.OrderItems)
                {
                    <tr>
                        <td>@item.MenuItem.Name</td>
                        <td>@item.Quantity</td>
                        <td>@item.Price.ToString("c")</td>
                        <td>@(item.Price * item.Quantity).ToString("c")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">Нет доступных элементов заказа</td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.Order?.OrderItems != null)
    {
        <h4 class="total">Total: @Model.Order.OrderItems.Sum(i => i.Price * i.Quantity).ToString("c")</h4>
    }
    else
    {
        <h4 class="total">Total: $0.00</h4>
    }

    <form id="payment-form" asp-controller="Payment" asp-action="ConfirmOrder" method="post">
        @Html.HiddenFor(m => m.Order.Id)
        @Html.HiddenFor(m => m.Order.Status)
        @Html.HiddenFor(m => m.Order.UserId)
        @Html.HiddenFor(m => m.Order.RestaurantId)
        @Html.HiddenFor(m => m.Order.OrderDate)
        @Html.HiddenFor(m => m.Order.DeliveryAddress)
        @Html.HiddenFor(m => m.Order.TotalPrice)

        @if (Model.Order.OrderItems != null)
        {
            @for (int i = 0; i < Model.Order.OrderItems.Count; i++)
            {
                @Html.HiddenFor(m => m.Order.OrderItems[i].MenuItem.Id)
                @Html.HiddenFor(m => m.Order.OrderItems[i].MenuItem.Name)
                @Html.HiddenFor(m => m.Order.OrderItems[i].Quantity)
                @Html.HiddenFor(m => m.Order.OrderItems[i].Price)
            }
        }

        <div class="form-group">
            <label for="CreditCardId" class="control-label">Select Credit Card</label>
            <select id="CreditCardId" name="CreditCardId" class="form-control">
                <option value="new">Add a new card</option>
                @if (Model.CreditCards != null)
                {
                    @foreach (var card in Model.CreditCards)
                    {
                        <option value="@card.Id">@card.CardNumber</option>
                    }
                }
            </select>
        </div>

        <div id="newCardDetails">
            <div class="form-group">
                <label asp-for="CardNumber" class="control-label"></label>
                <div id="card-element"><!-- Stripe.js injects the Card Element --></div>
                <span asp-validation-for="CardNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CardHolderName" class="control-label"></label>
                <input asp-for="CardHolderName" class="form-control" />
                <span asp-validation-for="CardHolderName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExpiryMonth" class="control-label"></label>
                <input asp-for="ExpiryMonth" class="form-control" />
                <span asp-validation-for="ExpiryMonth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExpiryYear" class="control-label"></label>
                <input asp-for="ExpiryYear" class="form-control" />
                <span asp-validation-for="ExpiryYear" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CVV" class="control-label"></label>
                <input asp-for="CVV" class="form-control" />
                <span asp-validation-for="CVV" class="text-danger"></span>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Confirm Order</button>
        <div id="card-errors" class="text-danger" role="alert"></div>
    </form>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        var stripe = Stripe('@Model.PublishableKey');
        var elements = stripe.elements();

        var card = elements.create('card');
        card.mount('#card-element');

        var form = document.getElementById('payment-form');
        var creditCardSelect = document.getElementById('CreditCardId');
        var newCardDetails = document.getElementById('newCardDetails');

        creditCardSelect.addEventListener('change', function (event) {
            if (event.target.value === "new") {
                newCardDetails.style.display = 'block';
            } else {
                newCardDetails.style.display = 'none';
            }
        });

        form.addEventListener('submit', function (event) {
            event.preventDefault();

            if (creditCardSelect.value === "new") {
                stripe.createToken(card).then(function (result) {
                    if (result.error) {
                        // Inform the user if there was an error
                        var errorElement = document.getElementById('card-errors');
                        errorElement.textContent = result.error.message;
                    } else {
                        // Send the token to your server
                        var hiddenInput = document.createElement('input');
                        hiddenInput.setAttribute('type', 'hidden');
                        hiddenInput.setAttribute('name', 'stripeToken');
                        hiddenInput.setAttribute('value', result.token.id);
                        form.appendChild(hiddenInput);

                        // Submit the form
                        form.submit();
                    }
                });
            } else {
                form.submit();
            }
        });
    </script>
}
